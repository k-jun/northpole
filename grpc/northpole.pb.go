// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.23.0
// 	protoc        v3.14.0
// source: northpole.proto

package grpc

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type MatchStatus int32

const (
	MatchStatus_Waiting MatchStatus = 0
	MatchStatus_Start   MatchStatus = 1
)

// Enum value maps for MatchStatus.
var (
	MatchStatus_name = map[int32]string{
		0: "Waiting",
		1: "Start",
	}
	MatchStatus_value = map[string]int32{
		"Waiting": 0,
		"Start":   1,
	}
)

func (x MatchStatus) Enum() *MatchStatus {
	p := new(MatchStatus)
	*p = x
	return p
}

func (x MatchStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MatchStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_northpole_proto_enumTypes[0].Descriptor()
}

func (MatchStatus) Type() protoreflect.EnumType {
	return &file_northpole_proto_enumTypes[0]
}

func (x MatchStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MatchStatus.Descriptor instead.
func (MatchStatus) EnumDescriptor() ([]byte, []int) {
	return file_northpole_proto_rawDescGZIP(), []int{0}
}

type UserInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *UserInfo) Reset() {
	*x = UserInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_northpole_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserInfo) ProtoMessage() {}

func (x *UserInfo) ProtoReflect() protoreflect.Message {
	mi := &file_northpole_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserInfo.ProtoReflect.Descriptor instead.
func (*UserInfo) Descriptor() ([]byte, []int) {
	return file_northpole_proto_rawDescGZIP(), []int{0}
}

func (x *UserInfo) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UserInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type MatchInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                  string      `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Status              MatchStatus `protobuf:"varint,2,opt,name=status,proto3,enum=MatchStatus" json:"status,omitempty"`
	CurrentNumberOfUser int64       `protobuf:"varint,3,opt,name=current_number_of_user,json=currentNumberOfUser,proto3" json:"current_number_of_user,omitempty"`
	MaxNumberOfUser     int64       `protobuf:"varint,4,opt,name=max_number_of_user,json=maxNumberOfUser,proto3" json:"max_number_of_user,omitempty"`
}

func (x *MatchInfo) Reset() {
	*x = MatchInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_northpole_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MatchInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MatchInfo) ProtoMessage() {}

func (x *MatchInfo) ProtoReflect() protoreflect.Message {
	mi := &file_northpole_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MatchInfo.ProtoReflect.Descriptor instead.
func (*MatchInfo) Descriptor() ([]byte, []int) {
	return file_northpole_proto_rawDescGZIP(), []int{1}
}

func (x *MatchInfo) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *MatchInfo) GetStatus() MatchStatus {
	if x != nil {
		return x.Status
	}
	return MatchStatus_Waiting
}

func (x *MatchInfo) GetCurrentNumberOfUser() int64 {
	if x != nil {
		return x.CurrentNumberOfUser
	}
	return 0
}

func (x *MatchInfo) GetMaxNumberOfUser() int64 {
	if x != nil {
		return x.MaxNumberOfUser
	}
	return 0
}

type MatchIDAndUserID struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MatchId string `protobuf:"bytes,1,opt,name=match_id,json=matchId,proto3" json:"match_id,omitempty"`
	UserId  string `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *MatchIDAndUserID) Reset() {
	*x = MatchIDAndUserID{}
	if protoimpl.UnsafeEnabled {
		mi := &file_northpole_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MatchIDAndUserID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MatchIDAndUserID) ProtoMessage() {}

func (x *MatchIDAndUserID) ProtoReflect() protoreflect.Message {
	mi := &file_northpole_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MatchIDAndUserID.ProtoReflect.Descriptor instead.
func (*MatchIDAndUserID) Descriptor() ([]byte, []int) {
	return file_northpole_proto_rawDescGZIP(), []int{2}
}

func (x *MatchIDAndUserID) GetMatchId() string {
	if x != nil {
		return x.MatchId
	}
	return ""
}

func (x *MatchIDAndUserID) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

var File_northpole_proto protoreflect.FileDescriptor

var file_northpole_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x6e, 0x6f, 0x72, 0x74, 0x68, 0x70, 0x6f, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0x2e, 0x0a, 0x08, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x22, 0xa3, 0x01, 0x0a, 0x09, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x24, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x0c, 0x2e, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x33, 0x0a, 0x16, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74,
	0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x6f, 0x66, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x13, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x4e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x4f, 0x66, 0x55, 0x73, 0x65, 0x72, 0x12, 0x2b, 0x0a, 0x12, 0x6d, 0x61,
	0x78, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x6f, 0x66, 0x5f, 0x75, 0x73, 0x65, 0x72,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x6d, 0x61, 0x78, 0x4e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x4f, 0x66, 0x55, 0x73, 0x65, 0x72, 0x22, 0x46, 0x0a, 0x10, 0x4d, 0x61, 0x74, 0x63, 0x68,
	0x49, 0x44, 0x41, 0x6e, 0x64, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x19, 0x0a, 0x08, 0x6d,
	0x61, 0x74, 0x63, 0x68, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d,
	0x61, 0x74, 0x63, 0x68, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x2a,
	0x25, 0x0a, 0x0b, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0b,
	0x0a, 0x07, 0x57, 0x61, 0x69, 0x74, 0x69, 0x6e, 0x67, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x53,
	0x74, 0x61, 0x72, 0x74, 0x10, 0x01, 0x32, 0x97, 0x01, 0x0a, 0x09, 0x4e, 0x6f, 0x72, 0x74, 0x68,
	0x50, 0x6f, 0x6c, 0x65, 0x12, 0x2c, 0x0a, 0x0f, 0x4a, 0x6f, 0x69, 0x6e, 0x50, 0x75, 0x62, 0x6c,
	0x69, 0x63, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x12, 0x09, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e,
	0x66, 0x6f, 0x1a, 0x0a, 0x2e, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x00,
	0x30, 0x01, 0x12, 0x2d, 0x0a, 0x10, 0x4a, 0x6f, 0x69, 0x6e, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74,
	0x65, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x12, 0x09, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66,
	0x6f, 0x1a, 0x0a, 0x2e, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x00, 0x30,
	0x01, 0x12, 0x2d, 0x0a, 0x0a, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x12,
	0x11, 0x2e, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x49, 0x44, 0x41, 0x6e, 0x64, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x44, 0x1a, 0x0a, 0x2e, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x00,
	0x42, 0x17, 0x5a, 0x15, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6b,
	0x2d, 0x6a, 0x75, 0x6e, 0x2f, 0x67, 0x72, 0x70, 0x63, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_northpole_proto_rawDescOnce sync.Once
	file_northpole_proto_rawDescData = file_northpole_proto_rawDesc
)

func file_northpole_proto_rawDescGZIP() []byte {
	file_northpole_proto_rawDescOnce.Do(func() {
		file_northpole_proto_rawDescData = protoimpl.X.CompressGZIP(file_northpole_proto_rawDescData)
	})
	return file_northpole_proto_rawDescData
}

var file_northpole_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_northpole_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_northpole_proto_goTypes = []interface{}{
	(MatchStatus)(0),         // 0: MatchStatus
	(*UserInfo)(nil),         // 1: UserInfo
	(*MatchInfo)(nil),        // 2: MatchInfo
	(*MatchIDAndUserID)(nil), // 3: MatchIDAndUserID
}
var file_northpole_proto_depIdxs = []int32{
	0, // 0: MatchInfo.status:type_name -> MatchStatus
	1, // 1: NorthPole.JoinPublicMatch:input_type -> UserInfo
	1, // 2: NorthPole.JoinPrivateMatch:input_type -> UserInfo
	3, // 3: NorthPole.LeaveMatch:input_type -> MatchIDAndUserID
	2, // 4: NorthPole.JoinPublicMatch:output_type -> MatchInfo
	2, // 5: NorthPole.JoinPrivateMatch:output_type -> MatchInfo
	2, // 6: NorthPole.LeaveMatch:output_type -> MatchInfo
	4, // [4:7] is the sub-list for method output_type
	1, // [1:4] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_northpole_proto_init() }
func file_northpole_proto_init() {
	if File_northpole_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_northpole_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_northpole_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MatchInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_northpole_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MatchIDAndUserID); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_northpole_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_northpole_proto_goTypes,
		DependencyIndexes: file_northpole_proto_depIdxs,
		EnumInfos:         file_northpole_proto_enumTypes,
		MessageInfos:      file_northpole_proto_msgTypes,
	}.Build()
	File_northpole_proto = out.File
	file_northpole_proto_rawDesc = nil
	file_northpole_proto_goTypes = nil
	file_northpole_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// NorthPoleClient is the client API for NorthPole service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type NorthPoleClient interface {
	JoinPublicMatch(ctx context.Context, in *UserInfo, opts ...grpc.CallOption) (NorthPole_JoinPublicMatchClient, error)
	JoinPrivateMatch(ctx context.Context, in *UserInfo, opts ...grpc.CallOption) (NorthPole_JoinPrivateMatchClient, error)
	LeaveMatch(ctx context.Context, in *MatchIDAndUserID, opts ...grpc.CallOption) (*MatchInfo, error)
}

type northPoleClient struct {
	cc grpc.ClientConnInterface
}

func NewNorthPoleClient(cc grpc.ClientConnInterface) NorthPoleClient {
	return &northPoleClient{cc}
}

func (c *northPoleClient) JoinPublicMatch(ctx context.Context, in *UserInfo, opts ...grpc.CallOption) (NorthPole_JoinPublicMatchClient, error) {
	stream, err := c.cc.NewStream(ctx, &_NorthPole_serviceDesc.Streams[0], "/NorthPole/JoinPublicMatch", opts...)
	if err != nil {
		return nil, err
	}
	x := &northPoleJoinPublicMatchClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type NorthPole_JoinPublicMatchClient interface {
	Recv() (*MatchInfo, error)
	grpc.ClientStream
}

type northPoleJoinPublicMatchClient struct {
	grpc.ClientStream
}

func (x *northPoleJoinPublicMatchClient) Recv() (*MatchInfo, error) {
	m := new(MatchInfo)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *northPoleClient) JoinPrivateMatch(ctx context.Context, in *UserInfo, opts ...grpc.CallOption) (NorthPole_JoinPrivateMatchClient, error) {
	stream, err := c.cc.NewStream(ctx, &_NorthPole_serviceDesc.Streams[1], "/NorthPole/JoinPrivateMatch", opts...)
	if err != nil {
		return nil, err
	}
	x := &northPoleJoinPrivateMatchClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type NorthPole_JoinPrivateMatchClient interface {
	Recv() (*MatchInfo, error)
	grpc.ClientStream
}

type northPoleJoinPrivateMatchClient struct {
	grpc.ClientStream
}

func (x *northPoleJoinPrivateMatchClient) Recv() (*MatchInfo, error) {
	m := new(MatchInfo)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *northPoleClient) LeaveMatch(ctx context.Context, in *MatchIDAndUserID, opts ...grpc.CallOption) (*MatchInfo, error) {
	out := new(MatchInfo)
	err := c.cc.Invoke(ctx, "/NorthPole/LeaveMatch", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// NorthPoleServer is the server API for NorthPole service.
type NorthPoleServer interface {
	JoinPublicMatch(*UserInfo, NorthPole_JoinPublicMatchServer) error
	JoinPrivateMatch(*UserInfo, NorthPole_JoinPrivateMatchServer) error
	LeaveMatch(context.Context, *MatchIDAndUserID) (*MatchInfo, error)
}

// UnimplementedNorthPoleServer can be embedded to have forward compatible implementations.
type UnimplementedNorthPoleServer struct {
}

func (*UnimplementedNorthPoleServer) JoinPublicMatch(*UserInfo, NorthPole_JoinPublicMatchServer) error {
	return status.Errorf(codes.Unimplemented, "method JoinPublicMatch not implemented")
}
func (*UnimplementedNorthPoleServer) JoinPrivateMatch(*UserInfo, NorthPole_JoinPrivateMatchServer) error {
	return status.Errorf(codes.Unimplemented, "method JoinPrivateMatch not implemented")
}
func (*UnimplementedNorthPoleServer) LeaveMatch(context.Context, *MatchIDAndUserID) (*MatchInfo, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LeaveMatch not implemented")
}

func RegisterNorthPoleServer(s *grpc.Server, srv NorthPoleServer) {
	s.RegisterService(&_NorthPole_serviceDesc, srv)
}

func _NorthPole_JoinPublicMatch_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(UserInfo)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(NorthPoleServer).JoinPublicMatch(m, &northPoleJoinPublicMatchServer{stream})
}

type NorthPole_JoinPublicMatchServer interface {
	Send(*MatchInfo) error
	grpc.ServerStream
}

type northPoleJoinPublicMatchServer struct {
	grpc.ServerStream
}

func (x *northPoleJoinPublicMatchServer) Send(m *MatchInfo) error {
	return x.ServerStream.SendMsg(m)
}

func _NorthPole_JoinPrivateMatch_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(UserInfo)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(NorthPoleServer).JoinPrivateMatch(m, &northPoleJoinPrivateMatchServer{stream})
}

type NorthPole_JoinPrivateMatchServer interface {
	Send(*MatchInfo) error
	grpc.ServerStream
}

type northPoleJoinPrivateMatchServer struct {
	grpc.ServerStream
}

func (x *northPoleJoinPrivateMatchServer) Send(m *MatchInfo) error {
	return x.ServerStream.SendMsg(m)
}

func _NorthPole_LeaveMatch_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MatchIDAndUserID)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NorthPoleServer).LeaveMatch(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/NorthPole/LeaveMatch",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NorthPoleServer).LeaveMatch(ctx, req.(*MatchIDAndUserID))
	}
	return interceptor(ctx, in, info, handler)
}

var _NorthPole_serviceDesc = grpc.ServiceDesc{
	ServiceName: "NorthPole",
	HandlerType: (*NorthPoleServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "LeaveMatch",
			Handler:    _NorthPole_LeaveMatch_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "JoinPublicMatch",
			Handler:       _NorthPole_JoinPublicMatch_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "JoinPrivateMatch",
			Handler:       _NorthPole_JoinPrivateMatch_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "northpole.proto",
}
